# make nvim default editor
export EDITOR="nvim"
alias vi="nvim"
alias vim="nvim"
alias view="nvim -M"

# remove less history file
export LESSHISTFILE=/dev/null

# remove .python_histroy file
rm ~/.python_history 2>/dev/null

# store last 1000 commands in memory
HISTSIZE=1000
# no history file
HISTFILE=/dev/null
SAVEHIST=0

# various options that I don't like
setopt nomatch
unsetopt appendhistory autocd beep extendedglob notify

# personal settings
ls() {
    command ls -lashFv "$@"
}

pls() {
    command sudo "$@"
}

NIX_DIR="/etc/nixos/nix_config"

switch() {
    # TODO FUTURE build remotely and then fall back to locally
    sudo nixos-rebuild switch --impure --flake $NIX_DIR"$@"
}

update() {
    # go to nixos directory
    pushd $NIX_DIR
    # check if current directory clean
    if output=$(git status --porcelain; git diff origin/master HEAD) && [[ "$output" ]]; then 
      popd
      return 1
      exit 1
    fi
    # update git repository
    git pull --ff-only
    switch \#$(hostname) || true
    # go back to original directory
    popd
}

hard() {
    "$@" && sudo shutdown -r now
}

clean() {
    sudo nix-store --verify --check-contents --repair || return -1
    update "$@" || return -1
    sudo nix-collect-garbage || return -1
}

git() {
    if [[ $1 == "graph" ]]; then
        git log --all --decorate --oneline --graph "${@:2}"

    elif [[ $1 == "new" ]]; then
        # $2 = response
        if [[ "2" != "$#" ]]; then
            echo "git new takes 1 argument, the project name"
            return -1
        fi
        # check if already exists
        local localGitDir="/home/user/projects"
        local remoteGitDir="/var/git"
        if ( [[ -d "$localGitDir/$2" ]] || ssh -q desktop "[[ -d "$remoteGitDir/$2" ]]" ) then
            echo "project with this name exists"
            return -1
        else
            # if a project with that name doesn't exist
            # save the output of ssh to see if it failed
            connStatus=$?
        fi
        # connection check
        if [[ $connStatus != "0" ]]; then
            echo "no connection"
            return -1
        fi
        # remote
        ssh desktop "mkdir $remoteGitDir/$2; cd $remoteGitDir/$2; git --bare init"
        # local
        mkdir $localGitDir/$2; cd $localGitDir/$2
        touch .gitignore
        git init
        git add .
        git commit -m "Initial commit"
        git remote add origin desktop:$remoteGitDir/$2
        git push --set-upstream origin

    else
        command git "$@"
    fi
}


# TODO FUTURE remove when fixed https://github.com/jeffreytse/zsh-vi-mode/issues/19
zvm_vi_yank () {
	zvm_yank
	printf %s "${CUTBUFFER}" |  wl-copy -n
	zvm_exit_visual_mode
}

zvm_vi_put_after () {
	local head= foot=
	local content=$(wl-paste)
	local offset=1
	if [[ ${content: -1} == $'\n' ]]
	then
		local pos=${CURSOR}
		for ((; $pos<$#BUFFER; pos++)) do
			if [[ ${BUFFER:$pos:1} == $'\n' ]]
			then
				pos=$pos+1
				break
			fi
		done
		if zvm_is_empty_line
		then
			head=${BUFFER:0:$pos}
			foot=${BUFFER:$pos}
		else
			head=${BUFFER:0:$pos}
			foot=${BUFFER:$pos}
			if [[ $pos == $#BUFFER ]]
			then
				content=$'\n'${content:0:-1}
				pos=$pos+1
			fi
		fi
		offset=0
		BUFFER="${head}${content}${foot}"
		CURSOR=$pos
	else
		if zvm_is_empty_line
		then
			head="${BUFFER:0:$((CURSOR-1))}"
			foot="${BUFFER:$CURSOR}"
		else
			head="${BUFFER:0:$CURSOR}"
			foot="${BUFFER:$((CURSOR+1))}"
		fi
		BUFFER="${head}${BUFFER:$CURSOR:1}${content}${foot}"
		CURSOR=$CURSOR+$#content
	fi
	zvm_highlight clear
	zvm_highlight custom $(($#head+$offset)) $(($#head+$#content+$offset))
}

zvm_vi_put_before () {
	local head= foot=
	local content=$(wl-paste)
	if [[ ${content: -1} == $'\n' ]]
	then
		local pos=$CURSOR
		for ((; $pos>0; pos--)) do
			if [[ "${BUFFER:$pos:1}" == $'\n' ]]
			then
				pos=$pos+1
				break
			fi
		done
		if zvm_is_empty_line
		then
			head=${BUFFER:0:$((pos-1))}
			foot=$'\n'${BUFFER:$pos}
			pos=$((pos-1))
		else
			head=${BUFFER:0:$pos}
			foot=${BUFFER:$pos}
		fi
		BUFFER="${head}${content}${foot}"
		CURSOR=$pos
	else
		head="${BUFFER:0:$CURSOR}"
		foot="${BUFFER:$((CURSOR+1))}"
		BUFFER="${head}${content}${BUFFER:$CURSOR:1}${foot}"
		CURSOR=$CURSOR+$#content
		CURSOR=$((CURSOR-1))
	fi
	zvm_highlight clear
	zvm_highlight custom $#head $(($#head+$#content))
}

