# laptop

switch() {
    # TODO FUTURE build remotely and then fall back to locally
    sudo nixos-rebuild switch --impure --flake $NIX_DIR"$@"
}


update() {
    # go to nixos directory
    pushd $NIX_DIR
    # check if current directory clean
    if output=$(git status --porcelain; git diff origin/master HEAD) && [[ "$output" ]]; then
        popd
        return 1
    fi
    SYSPATH="/nix/var/nix/profiles/system"
    # save the current system
    prevSYS=$(readlink $SYSPATH)
    # update git repository
    git pull --ff-only
    # update flake
    nix flake update
    # make sure everything is in git tree
    git add -A
    switch \#$(hostname) || true
    # if the switch didn't change system link path, unstage changes
    # else the switch was successful, push
    if [[ $prevSYS == $(readlink $SYSPATH) ]]; then
        git reset
        popd
        # go back to original directory
        return 1
    else
        git commit -m "update"
        git push
        # go back to original directory
        popd
        return 0
    fi
}

hard() {
    "$@" && sudo shutdown now
}

unlock() {
    if [[ "1" != "$#" ]]; then
        echo "unlock takes 1 argument, the ssh server name"
        return -1
    fi
    local password
    echo -n "password:"
    read -s password
    ssh $1 'echo '$password' > /crypt-ramfs/passphrase'
}
