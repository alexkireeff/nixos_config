# make nvim default editor
export EDITOR="nvim"
alias vi="nvim"
alias vim="nvim"
alias view="nvim -M"

# remove less history file
export LESSHISTFILE=/dev/null

# store last 1000 commands in memory
HISTSIZE=1000
# no history file
HISTFILE=/dev/null
SAVEHIST=0

# various options that I don't like
setopt nomatch
unsetopt appendhistory autocd beep extendedglob notify

# personal settings
ls() {
    command ls -lashFv "$@"
}

pls() {
    command sudo "$@"
}

NIX_DIR="/etc/nixos/nix_config"

nix() {
    if [[ $1 == "develop" ]]; then
        command nix develop $NIX_DIR"${@:2}"
    else
        command nix "$@"
    fi
}

switch() {
    # actual nix switch command
    sudo nixos-rebuild switch --impure --flake $NIX_DIR"$@"
}

update() {
    # Go to nixos directory
    pushd $NIX_DIR 
    SYSPATH="/nix/var/nix/profiles/system"
    # Save the current system
    prevSYS=$(readlink $SYSPATH)
    # update flake
    nix flake update
    # make sure everything is in git tree
    git add -A
    switch "$@" || true
    # if the switch didn't change system link path, unstage changes
    # else the switch was successful, push
    if [[ $prevSYS == $(readlink $SYSPATH) ]]; then
        git reset
    else
        git commit -m "update"
        git push
    fi
    # Go back to original directory
    popd
}

hard() {
    "$@" && shutdown now
}

clean() {
    sudo nix-store --verify --check-contents --repair || return -1
    update "$@" --upgrade boot --repair || return -1
    sudo nix-collect-garbage || return -1
}

git() {
    if [[ $1 == "graph" ]]; then
        git log --all --decorate --oneline --graph "$@"

    elif [[ $1 == "new" ]]; then
        # $2 = response
        if [[ "2" != "$#" ]]; then
            echo "git new takes 1 argument, the project name"
            return -1
        fi
        # check if already exists
        local gitDir="/home/user/git"
        if [[ -d "$gitDir/$2" ]] || ssh -q server [[ -d "$gitDir/$2" ]]; connStatus=$?; then
            echo "project with this name exists"
            return -1
        fi
        # connection check
        if [[ $connStatus != "0" ]]; then
            echo "no connection to server"
            return -1
        fi
        # remote
        ssh server "mkdir $gitDir/$2; cd $gitDir/$2; git --bare init"
        # local
        mkdir $gitDir/$2
        cd $gitDir/$2
        touch .gitignore
        git init
        git add .
        git commit -m "Initial commit"
        git remote add origin server:$gitDir/$2
        git push --set-upstream origin

    else
        command git "$@"
    fi
}

